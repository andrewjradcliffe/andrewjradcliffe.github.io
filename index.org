#+OPTIONS: timestamp:nil author:nil
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="https://cdn.simplecss.org/simple.min.css" />

Might be of interest?
* Articles
** Greatest convex minorant / least concave majorant
Currently in [[file:gcm-algorithm.pdf][pre-pre-print]] stage, but the idea is crystallized.  More
will be added (e.g. online algorithm), but in order to get it on
=crates.io= sooner rather than later, while providing users a rigorous
foundation, I opt for release here.  This needs endorsement prior to
submission to =arXiv.org=. When that happens, the link will be updated
to point there.

* Julia packages
The useful ones
** [[https://github.com/andrewjradcliffe/Whitening.jl][Whitening.jl]]
Whitening transformations: forward and inverse. Lightweight, with no
dependencies other than =LinearAlgebra= stdlib.
** [[https://github.com/andrewjradcliffe/OptimizationTestFunctions.jl][OptimizationTestFunctions.jl]]
A wide variety of functions, $f : \mathbb{R}^{n} \mapsto \mathbb{R}$,
which are most frequently used to test mathematical optimization
algorithms. Also handy for testing automatic differentiation
implementations.
** [[https://github.com/andrewjradcliffe/VectorizedReduction.jl][VectorizedReduction.jl]]
Codegen for fast folds.
** [[https://github.com/andrewjradcliffe/LogExpFunctionsExt.jl][LogExpFunctionsExt.jl]]
Lightweight, sensible extensions to the [[https://github.com/JuliaStats/LogExpFunctions.jl][LogExpFunctions.jl]] package.
** [[https://github.com/andrewjradcliffe/MarsagliaDiscreteSamplers.jl][MarsagliaDiscreteSamplers.jl]]
Very fast samplers for discrete probability distributions.
** [[https://github.com/andrewjradcliffe/CategoricalMonteCarlo.jl][CategoricalMonteCarlo.jl]]
Ever wanted to sample from very high-dimensional joint distributions
comprised entirely of discrete, independent marginals? This package
does just that; it also offers various options for in-place
transformation.
** [[https://github.com/andrewjradcliffe/RecursiveTiles.jl][RecursiveTiles.jl]]
Ever receive the following? A table comprised of flattened trees,
with:
- parent-child relationships spanning more than one column
- arbitrary order of columns, with no correspondence to parent-child
  relationship
- multiple flattened trees vertically concatenated into the same
  table, but with unspecified begin/end
If so, welcome to my life a few years ago. This package will enable
you to roll that mess back into trees with a few lines of code.
** [[https://github.com/andrewjradcliffe/MonteCarloSummary.jl][MonteCarloSummary.jl]]
The name says it all.

* Rust crates
** [[https://github.com/andrewjradcliffe/cmdstan-rs][cmdstan-rs]]
The README sort of says it all: do you need to integrate Stan in your
system being developed in Rust? If yes, then you want this crate!

Eventually I'll get around to getting the PR merged... life has taken
a few unexpected branches since January 2024.
** [[https://crates.io/crates/lnexp][lnexp]]
Compositions of =log=, =log1p=, =exp=, and =expm1=, carefully
evaluated so as to avoid underflow/overflow.
** [[https://crates.io/crates/logsumexp][logsumexp]]
Online (1-pass) [[https://en.wikipedia.org/wiki/LogSumExp][LogSumExp]] for iterators.
** [[https://crates.io/crates/gcm-lcm][gcm-lcm]]
Greatest convex minorant, least concave majorant. Useful for variety
of purposes; my interest was related to stochastic processes, but has
general applicability as a convex (or concave) function approximator.
** [[https://crates.io/crates/horner-eval][horner-eval]]
Evaluate polynomials using [[https://en.wikipedia.org/wiki/Horner%27s_method][Horner's method]]. Unroll polynomials of
fixed size at compile time (and use =MulAdd=); useful if writing
numerical libraries.

* Rust applications
** [[https://github.com/andrewjradcliffe/dungeoncrawl][dungeoncrawl]]
You have probably played a video game at some point. Have you ever
created one? The latter is more interesting, I promise!
